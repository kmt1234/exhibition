<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="performanceSQL">

	<select id="getPerformance" resultType="eventboard">
		select * from eventboard
	</select>
	
	<select id="getPerformancePlay" resultType="eventboard">
		select * from eventboard_play
	</select>
	
	<!--공연 일정 리스트 가져오기 -->
	<select id="getPlayList" parameterType="java.util.Map" resultType="eventboard">
		select * from(
                select rownum rn, tt.* from(
                select * from eventboard_play where startDate <![CDATA[>=]]> #{selMonth} and endDate <![CDATA[<=]]> (select last_day(#{selMonth}) from dual) order by startDate desc)tt
             )where rn <![CDATA[>=]]> ${startNum} and rn <![CDATA[<=]]> ${endNum} 
	</select>
	
	<!--공연일정 리스트 총 글수 가져오는 메소드 -->
	<select id="getPlayListTotalA" resultType="Integer">
		select count(*) from eventboard_play where startDate <![CDATA[>=]]> (select TRUNC(sysdate,'MM') from dual) and endDate <![CDATA[<=]]> (select last_day(sysdate) from dual)
	</select>
	
	<!--전시회일정 리스트 총 글수 가져오는 메소드  -->
	<select id="getExhibitionListTotalA" resultType="Integer">
		select count(*) from eventboard where startDate <![CDATA[>=]]> (select TRUNC(sysdate,'MM') from dual) and endDate <![CDATA[<=]]> (select last_day(sysdate) from dual)
	</select>
	
	<!--전시회일정 리스트 가져오는 메소드 -->
	<select id="getExhibitionList" parameterType="java.util.Map" resultType="eventboard">
		select * from(
                select rownum rn, tt.* from(
                select * from eventboard where startDate <![CDATA[>=]]> #{selMonth} and endDate <![CDATA[<=]]> (select last_day(#{selMonth}) from dual) order by startDate desc)tt
             )where rn <![CDATA[>=]]> ${startNum} and rn <![CDATA[<=]]> ${endNum} 
	</select>
	
	<!--공연 예약하기 폼  -->
	<select id="performanceBook" parameterType="java.lang.String" resultType="eventboard">
		select * from eventboard_play where seq = #{seq}
	</select>
	
	<!--공연 예매자 등록(예매자 DB)-->
	<insert id="bookPlayMembers" parameterType="bookboard">
		insert into book_play_members values(#{imageName},#{playDate},#{memberId},#{ticketQty})
	</insert>
	
	<!--예매 수만큼 잔여티켓 감소 -->
	<update id="bookPlayMembers_calculate" parameterType="bookboard">
		update eventboard_play_book set remainTicket =playTicket - #{ticketQty}, bookTicket = bookTicket + #{ticketQty} where imageName = #{imageName} and playDate = #{playDate} 
	</update>
	
	<!--연극 잔여좌석 가져오는 메소드  -->
	<select id="checkRemainSeats" parameterType="java.util.Map" resultType="java.lang.String">
		select playTicket from eventboard_play_book where imageName = #{imageName} and playDate = #{playDate}
	</select>
	
	<!--선택일자의  해당 연극 예매된 티켓 수 가져오기  -->
	<select id="checkUsedSeats" parameterType="java.util.Map" resultType="java.lang.String">
		select sum(ticketQty) from book_play_members where imageName = #{imageName} and playDate = #{playDate}
	</select>
	
	<!--전시회 예약하기 폼-->
	<select id="exhibitionBook" parameterType="java.lang.String" resultType="eventboard">
		select * from eventboard where seq = #{seq}
	</select>
	
	<!--전시회 예매자 등록(예매자 DB)-->
	<insert id="bookExhibitionMembers" parameterType="bookboardEx">
		insert into book_exhibition_members values(#{imageName},#{playDate},#{memberId},#{ticketQty})
	</insert>
	
	<!--예매 수만큼 잔여티켓 감소 -->
	<update id="bookExhibitionMembers_calculate" parameterType="bookboardEx">
		update eventboard_exhibition_book set remainTicket =playTicket - #{ticketQty}, bookTicket = bookTicket + #{ticketQty} where imageName = #{imageName} and playDate = #{playDate} 
	</update>
	
	<!--전시회 잔여좌석 가져오는 메소드 -->
	<select id="checkRemainSeats_ex" parameterType="java.util.Map" resultType="java.lang.String">
		select playTicket from eventboard_exhibition_book where imageName = #{imageName} and playDate = #{playDate}
	</select>
	
	<!--선택일자의  해당 전시회 예매된 티켓 수 가져오기-->
	<select id="checkUsedSeats_ex" parameterType="java.util.Map" resultType="java.lang.String">
		select sum(ticketQty) from book_exhibition_members where imageName = #{imageName} and playDate = #{playDate}
	</select>
	
	<!--연극 3개월 후 일정 가져오는 메소드-->
	<select id="getNextPlayList" parameterType="java.util.Map" resultType="eventboard">
		select * from(
                select rownum rn, tt.* from(
                select * from eventboard_play where startDate <![CDATA[>=]]> (select add_months(#{selMonth},1) from dual) and endDate <![CDATA[<=]]> (select last_day(add_months(#{selMonth},3)) from dual) order by startDate desc)tt
             )where rn <![CDATA[>=]]> ${startNum} and rn <![CDATA[<=]]> ${endNum}
	</select>
	
	<!--연극 3개월 후 일정 수 가져오는 메소드-->
	<select id="getNextPlayListTotalA" parameterType="java.util.Map" resultType="int">
		select count(*) from eventboard_play where startDate <![CDATA[>=]]> (select add_months(#{selMonth},1) from dual) and endDate <![CDATA[<=]]> (select last_day(add_months(#{selMonth},3)) from dual)
	</select>
	
	<!--연극 3개월 전 일정 가져오는 메소드-->
	<select id="getPrevPlayList" parameterType="java.util.Map" resultType="eventboard">
		select * from(
                select rownum rn, tt.* from(
                select * from eventboard_play where startDate <![CDATA[>=]]> (select add_months(#{selMonth},-3) from dual) and endDate <![CDATA[<=]]> (select last_day(add_months(#{selMonth},-1)) from dual) order by startDate desc)tt
             )where rn <![CDATA[>=]]> ${startNum} and rn <![CDATA[<=]]> ${endNum}
	</select>
	
	<!--연극 3개월 전 일정 수 가져오는 메소드 -->
	<select id="getPrevPlayListTotalA" parameterType="java.util.Map" resultType="int">
		select count(*) from eventboard_play where startDate <![CDATA[>=]]> (select add_months(#{selMonth},-3) from dual) and endDate <![CDATA[<=]]> (select last_day(add_months(#{selMonth},-1)) from dual)
	</select>
	
	<!--전시회 3개월 후 일정 수 가져오는 메소드 -->
	<select id="getNextExhibitionListTotalA" parameterType="java.util.Map" resultType="int">
		select count(*) from eventboard where startDate <![CDATA[>=]]> (select add_months(#{selMonth},1) from dual) and endDate <![CDATA[<=]]> (select last_day(add_months(#{selMonth},3)) from dual)
	</select>
	
	<!--전시회 3개월 후 일정 가져오는 메소드-->
	<select id="getNextExhibitionList" parameterType="java.util.Map" resultType="eventboard">
		select * from(
                select rownum rn, tt.* from(
                select * from eventboard where startDate <![CDATA[>=]]> (select add_months(#{selMonth},1) from dual) and endDate <![CDATA[<=]]> (select last_day(add_months(#{selMonth},3)) from dual) order by startDate desc)tt
             )where rn <![CDATA[>=]]> ${startNum} and rn <![CDATA[<=]]> ${endNum}
	</select>
	
	<!--전시회 3개월 전 일정 수 가져오는 메소드   -->
	<select id="getPrevExhibitionListTotalA" parameterType="java.util.Map" resultType="int">
		select count(*) from eventboard where startDate <![CDATA[>=]]> (select add_months(#{selMonth},-3) from dual) and endDate <![CDATA[<=]]> (select last_day(add_months(#{selMonth},-1)) from dual)
	</select>
	
	<!--전시회 3개월 전 일정 가져오는 메소드  -->
	<select id="getPrevExhibitionList" parameterType="java.util.Map" resultType="eventboard">
		select * from(
                select rownum rn, tt.* from(
                select * from eventboard where startDate <![CDATA[>=]]> (select add_months(#{selMonth},-3) from dual) and endDate <![CDATA[<=]]> (select last_day(add_months(#{selMonth},-1)) from dual) order by startDate desc)tt
             )where rn <![CDATA[>=]]> ${startNum} and rn <![CDATA[<=]]> ${endNum}
	</select>
	
	<!-- 해당하는 날의 전시회 리스트 -->
	<select id="getAllListExhibition" parameterType="String" resultType="eventboard">
		select * from EVENTBOARD where #{date} BETWEEN startDate and endDate
	</select>
	
	<!-- 해당하는 날의 공연 리스트 -->
	<select id="getAllListConcert" parameterType="String" resultType="eventboard">
		select * from EVENTBOARD_PLAY where #{date} BETWEEN startDate and endDate
	</select>
</mapper>